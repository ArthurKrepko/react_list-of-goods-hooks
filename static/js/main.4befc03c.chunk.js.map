{"version":3,"sources":["App.tsx","ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","item","goodsFromServer","App","useState","NONE","sortType","sortByType","isReversed","setReverse","reorderedGoods","visibleGoods","sort","prev","curr","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAMM,EAAgB,WAC3B,MAA+BC,mBAASP,EAASQ,MAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA9CD,SACLX,EACAO,EACAE,GAEA,IAAMG,EAAY,YAAOZ,GAiBzB,OAfAY,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQR,GACN,KAAKT,EAASkB,SACZ,OAAOF,EAAKG,cAAcF,GAC5B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAKK,OAASJ,EAAKI,OAC5B,QACE,OAAO,MAITV,GACFG,EAAaQ,UAGRR,EAwBgBS,CACrBlB,EACAI,EACAE,GAGF,OACE,mCACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaT,EAASkB,WAEtCS,QAjCa,WACrBjB,EAAWV,EAASkB,WA0Bd,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaT,EAASoB,SAEtCO,QAxCW,WACnBjB,EAAWV,EAASoB,SAiCd,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAff,IAEhBgB,QA/CM,WACdf,GAAYD,IAwCN,sBAWEF,IAAaT,EAASQ,MAAQG,IAE5B,wBACEc,KAAK,SACLD,UAAU,4BACVG,QArDA,WACZjB,EAAWV,EAASQ,MACpBI,GAAW,IAgDD,sBAUN,cAAC,EAAD,CAAaV,MAAOW,UE3H5Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4befc03c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev, curr) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prev.localeCompare(curr);\n      case SortType.LENGTH:\n        return prev.length - curr.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, sortByType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    sortByType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    sortByType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const reset = () => {\n    sortByType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ListOfGoods goods={reorderedGoods} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(item => (\n      <li data-cy=\"Good\" key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}