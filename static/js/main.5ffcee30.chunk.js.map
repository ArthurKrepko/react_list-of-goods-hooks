{"version":3,"sources":["App.tsx","ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","item","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverse","reorderedGoods","options","visibleGoods","sort","prev","curr","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","noneSorted","className","type","classNames","onClick","prevReverse","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA9CD,SACLX,EACAY,GAEA,IAAMC,EAAY,YAAOb,GACjBO,EAAyBK,EAAzBL,SAAUE,EAAeG,EAAfH,WAiBlB,OAfAI,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQT,GACN,KAAKT,EAASmB,SACZ,OAAOF,EAAKG,cAAcF,GAC5B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAKK,OAASJ,EAAKI,OAC5B,QACE,OAAO,MAITX,GACFI,EAAaQ,UAGRR,EAwBgBS,CACrBnB,EACA,CACEI,WACAE,eAIEc,EAAahB,IAAaT,EAASQ,KAEzC,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaT,EAASmB,WAEtCU,QApCe,WACrBnB,EAAYV,EAASmB,WA6BjB,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYnB,IAAaT,EAASqB,SAEtCQ,QA3Ca,WACnBnB,EAAYV,EAASqB,SAoCjB,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAfjB,IAEhBkB,QAlDQ,WACdjB,GAAW,SAAAkB,GAAW,OAAKA,MA2CvB,sBAWEL,GAAcd,IAEZ,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAxDE,WACZnB,EAAYV,EAASQ,MACrBI,GAAW,IAmDH,sBAUN,cAAC,EAAD,CAAaV,MAAOW,QEnI1BkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ffcee30.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface GoodsSortingOptions {\n  isReversed: boolean;\n  sortType: SortType;\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  options: GoodsSortingOptions,\n) {\n  const visibleGoods = [...goods];\n  const { sortType, isReversed } = options;\n\n  visibleGoods.sort((prev, curr) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prev.localeCompare(curr);\n      case SortType.LENGTH:\n        return prev.length - curr.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReverse(prevReverse => !prevReverse);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortType,\n      isReversed,\n    },\n  );\n\n  const noneSorted = sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': isReversed === false },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(noneSorted || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ListOfGoods goods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(item => (\n      <li data-cy=\"Good\" key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}